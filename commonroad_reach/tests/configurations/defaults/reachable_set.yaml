# mode for reachable set computation
# 1: Polytopic set propagation with Python backend
# 2: Polytopic set propagation with C++ backend
# 3: Online stage of the Graph-based propagation
# 4: Offline stage of the Graph-based propagation
mode_computation: 2
# mode for drivable area repartition
# 1: Repartition, then collision check (results in more nodes)
# 2: Collision check, then repartition (reduces number of nodes)
# 3: Repartition, collision check, then repartition again (reduces number of nodes)
mode_repartition: 2
# mode for considering the shape of the ego vehicle
# 1: Inscribed circle (under-approximation of the shape of the ego vehicle)
# 2: Circumscribed circle (over-approximation of the shape of the ego vehicle)
mode_inflation: 1
# grid size for rectangle alignment (before collision check)
size_grid: 0.2
# grid size for second time rectangle alignment (after collision check)
size_grid_2nd: 0.05
# threshold for terminating the split of reachable sets in collision checks
radius_terminal_split: 0.5
# if set to false, static and dynamic obstacles will be omitted
consider_traffic: true
# number of thread for C++ reachable set computation
num_threads: 4
# flag whether to prune reach nodes not reaching the final time step
prune_nodes_not_reaching_final_step: true
# name of the pickle file of the offline computation
name_pickle_offline: offline_nt3_CART_amax6.0_vmax30.0_ms6_dx0.5_ver0.0.1.pickle
# number of multi-steps for graph-based propagation
n_multi_steps: 6