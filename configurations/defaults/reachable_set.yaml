# mode for computation
# 1: Single-step: Python backend with Python collision checker
# 2: Single-step: Python backend with C++ collision checker
# 3: Single-step: C++ backend with C++ collision checker
# 4: Multi-step (online): Python backend with Python collision checker
# 5: Multi-step (online): Python backend with C++ collision checker
# 6: Multi-step (offline): Python backend
mode: 1
# grid size for rectangle alignment (before collision check)
size_grid: 0.2
# grid size for second time rectangle alignment (after collision check)
size_grid_2nd: 0.05
# threshold for terminating the split of reachable sets in collision checks
radius_terminal_split: 0.7
# if set to false, static and dynamic obstacles will be omitted
consider_traffic: true
# number of thread for C++ reachable set computation
num_threads: 4
# flag whether to prune reach nodes not reaching the final time step
prune_nodes_not_reaching_final_time_step: true
# name of the pickle file of the offline computation
name_pickle_offline: offline_15_0.5_5.0_30.0.pickle